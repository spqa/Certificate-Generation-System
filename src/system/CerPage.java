/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package system;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PrinterException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author VThang
 */
public class CerPage extends javax.swing.JFrame {

    private String cellUser = null;
    private boolean editState = false;
    private DefaultTableModel modelCertificateManager = null;
    private DefaultTableModel modeltVerifyStudent = null;
    private DefaultTableModel modelVerifyStudentSubject = null;
    private DefaultTableModel modelVerifyStudentBalance = null;
    private int studentID;
    private int tempMark;
    private String studentRollnumber = null;
    private String studentName = null;
    private String studentCourse = null;

    public CerPage(String user) {
        initComponents();
        //    lblFullName.setText(name);
        setVisible(true);

        cellUser = user;
        loadInfo();

        loadCertificate();
        tblCertificateManager.setModel(modelCertificateManager);

        loadStudent();
        tblVerifyStudent.setModel(modeltVerifyStudent);

        loadSubjectDetails();
    }

    private CerPage() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblFullName = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        tabCertificateManager = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVerifyStudent = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVerifyStudentSubject = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblVerifyStudentBalance = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtStatusReport = new javax.swing.JTextArea();
        btnPrintReport = new javax.swing.JButton();
        btnGenerate = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblCertificateManager = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btnSearchCertificate = new javax.swing.JButton();
        txtSearchFillter = new javax.swing.JTextField();
        cmbSearchFilterCertificate = new javax.swing.JComboBox();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtInfoFullname = new javax.swing.JTextField();
        txtInfoDate = new javax.swing.JTextField();
        rdoInfoMale = new javax.swing.JRadioButton();
        rdoInfoFemale = new javax.swing.JRadioButton();
        txtInfoAddress = new javax.swing.JTextField();
        txtInfoEmail = new javax.swing.JTextField();
        txtInfoPhone = new javax.swing.JTextField();
        btnInfoEdit = new javax.swing.JButton();
        btnInfoChange = new javax.swing.JButton();
        btnInfoLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ABCLogon5050.png"))); // NOI18N
        jLabel1.setText("Exam Center");

        lblFullName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblFullName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Admin260.png"))); // NOI18N
        lblFullName.setText("(Name Of User)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tabCertificateManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabCertificateManagerMouseEntered(evt);
            }
        });
        tabCertificateManager.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabCertificateManagerStateChanged(evt);
            }
        });
        tabCertificateManager.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tabCertificateManagerComponentShown(evt);
            }
        });

        tblVerifyStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FullName", "Date Of Birth", "Course Name", "FeeType"
            }
        ));
        jScrollPane1.setViewportView(tblVerifyStudent);

        tblVerifyStudentSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Subject", "Mark"
            }
        ));
        jScrollPane2.setViewportView(tblVerifyStudentSubject);

        tblVerifyStudentBalance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Total Fee", "Paid", "Balance", "Day"
            }
        ));
        jScrollPane3.setViewportView(tblVerifyStudentBalance);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel3.setText("Status Report");

        txtStatusReport.setColumns(20);
        txtStatusReport.setRows(5);
        jScrollPane4.setViewportView(txtStatusReport);

        btnPrintReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Print45.png"))); // NOI18N
        btnPrintReport.setText("Print Report");
        btnPrintReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintReportActionPerformed(evt);
            }
        });

        btnGenerate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/GerCer45.png"))); // NOI18N
        btnGenerate.setText("Verify and Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(btnGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrintReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 104, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(btnPrintReport)
                                .addGap(29, 29, 29)
                                .addComponent(btnGenerate)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        tabCertificateManager.addTab("Verify Student", new javax.swing.ImageIcon(getClass().getResource("/res/AddStu40.png")), jPanel4, ""); // NOI18N

        tblCertificateManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Certificate ID", "Student ID", "Grade", "Generated Day"
            }
        ));
        jScrollPane5.setViewportView(tblCertificateManager);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Print45.png"))); // NOI18N
        jButton5.setText("Print");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/PrintPreview45.png"))); // NOI18N
        jButton6.setText("Preview");

        btnSearchCertificate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Search45.png"))); // NOI18N
        btnSearchCertificate.setText("Search");
        btnSearchCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCertificateActionPerformed(evt);
            }
        });

        txtSearchFillter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchFillterActionPerformed(evt);
            }
        });

        cmbSearchFilterCertificate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Certificate ID", "Student ID", "Grade", "Generated Day" }));

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton3.setText("Oldest");

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton4.setText("Newest");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearchCertificate)
                        .addGap(164, 164, 164))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txtSearchFillter)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbSearchFilterCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jRadioButton3)
                                        .addGap(84, 84, 84)
                                        .addComponent(jRadioButton4))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jButton6)
                                        .addGap(42, 42, 42)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 119, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchFillter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSearchFilterCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSearchCertificate)
                .addGap(40, 40, 40)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addGap(21, 21, 21))
        );

        tabCertificateManager.addTab("Certificate Manager", new javax.swing.ImageIcon(getClass().getResource("/res/Manager40.png")), jPanel5); // NOI18N

        jLabel4.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        jLabel4.setText("FullName:");

        jLabel5.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        jLabel5.setText("Date Of Birth:");

        jLabel6.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        jLabel6.setText("Gender:");

        jLabel7.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        jLabel7.setText("Phone:");

        jLabel8.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        jLabel8.setText("Email:");

        jLabel9.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        jLabel9.setText("Address:");

        txtInfoFullname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtInfoFullname.setEnabled(false);

        txtInfoDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtInfoDate.setEnabled(false);

        buttonGroup2.add(rdoInfoMale);
        rdoInfoMale.setText("Male");
        rdoInfoMale.setEnabled(false);

        buttonGroup2.add(rdoInfoFemale);
        rdoInfoFemale.setText("Female");
        rdoInfoFemale.setEnabled(false);

        txtInfoAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtInfoAddress.setEnabled(false);

        txtInfoEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtInfoEmail.setEnabled(false);

        txtInfoPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtInfoPhone.setEnabled(false);

        btnInfoEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/edit40.png"))); // NOI18N
        btnInfoEdit.setText("Edit Information");
        btnInfoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoEditActionPerformed(evt);
            }
        });

        btnInfoChange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ChangePass40.png"))); // NOI18N
        btnInfoChange.setText("Change Password");

        btnInfoLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/LogOut45.png"))); // NOI18N
        btnInfoLogout.setText("Log Out");
        btnInfoLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtInfoFullname, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                                .addComponent(txtInfoDate))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(rdoInfoMale)
                                .addGap(29, 29, 29)
                                .addComponent(rdoInfoFemale))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(btnInfoEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnInfoChange)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtInfoAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(txtInfoEmail)
                            .addComponent(txtInfoPhone)))
                    .addComponent(btnInfoLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(txtInfoFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInfoPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(txtInfoDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInfoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(rdoInfoMale)
                    .addComponent(rdoInfoFemale)
                    .addComponent(txtInfoAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInfoEdit)
                    .addComponent(btnInfoChange)
                    .addComponent(btnInfoLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84))
        );

        tabCertificateManager.addTab("My Information", new javax.swing.ImageIcon(getClass().getResource("/res/Admin40.png")), jPanel6); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabCertificateManager)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabCertificateManager)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInfoLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoLogoutActionPerformed
        logout();
    }//GEN-LAST:event_btnInfoLogoutActionPerformed

    private void btnInfoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoEditActionPerformed
        if (editState == false) {
            txtInfoAddress.setEnabled(true);
            txtInfoDate.setEnabled(true);
            txtInfoEmail.setEnabled(true);
            txtInfoFullname.setEnabled(true);
            txtInfoPhone.setEnabled(true);
            rdoInfoFemale.setEnabled(true);
            rdoInfoMale.setEnabled(true);
            editState = true;
            btnInfoEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ok40.png")));
            btnInfoEdit.setText("Save Infomation");
        } else if (editState == true) {
            txtInfoAddress.setEnabled(false);
            txtInfoDate.setEnabled(false);
            txtInfoEmail.setEnabled(false);
            txtInfoFullname.setEnabled(false);
            txtInfoPhone.setEnabled(false);
            rdoInfoFemale.setEnabled(false);
            rdoInfoMale.setEnabled(false);
            editState = false;
            btnInfoEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/edit40.png")));
            btnInfoEdit.setText("Edit Infomation");

            Connection conn = null;
            CallableStatement stmt = null;
            ResultSet rs = null;

            try {
                String DOB = txtInfoDate.getText();
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                java.util.Date utilDate = new java.util.Date();
                try {
                    utilDate = formatter.parse(DOB);
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }

                String fullName = txtInfoFullname.getText();
                java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                String gender = null;
                if (rdoInfoMale.isSelected()) {
                    gender = "Nam";
                } else if (rdoInfoFemale.isSelected()) {
                    gender = "Nữ";
                }

                String phone = txtInfoPhone.getText();
                String email = txtInfoEmail.getText();
                String address = txtInfoAddress.getText();

                conn = DBConnect.ConnectDatabase();

                stmt = conn.prepareCall("{call editCerInfo(?, ?, ?, ?, ?, ?, ?) };");
                stmt.setString(1, cellUser);
                stmt.setNString(2, fullName);
                stmt.setDate(3, sqlDate);
                stmt.setNString(4, gender);
                stmt.setString(5, phone);
                stmt.setString(6, email);
                stmt.setString(7, address);
                rs = stmt.executeQuery();
            } catch (Exception e) {
                if (e.getMessage() == "The statement did not return a result set.") {
                    JOptionPane.showMessageDialog(null, "Save Successful");
                }
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_btnInfoEditActionPerformed

    private void btnSearchCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCertificateActionPerformed
        searchCertificate();
    }//GEN-LAST:event_btnSearchCertificateActionPerformed

    private void txtSearchFillterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchFillterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchFillterActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        createCertificate();
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
    }//GEN-LAST:event_formMouseClicked

    private void tabCertificateManagerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCertificateManagerMouseEntered

    }//GEN-LAST:event_tabCertificateManagerMouseEntered

    private void btnPrintReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintReportActionPerformed
        try {
            txtStatusReport.print();
        } catch (PrinterException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnPrintReportActionPerformed

    private void tabCertificateManagerComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabCertificateManagerComponentShown
        loadCertificate();
    }//GEN-LAST:event_tabCertificateManagerComponentShown

    private void tabCertificateManagerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabCertificateManagerStateChanged
        // TODO add your handling code here:
        loadCertificate();
    }//GEN-LAST:event_tabCertificateManagerStateChanged

    public void loadInfo() {
        Connection conn = null;
        CallableStatement stmt = null;
        ResultSet rs = null;

        try {
            conn = DBConnect.ConnectDatabase();
            stmt = conn.prepareCall("{call getCerInfo(?) };");
            stmt.setString(1, cellUser);
            rs = stmt.executeQuery();
            if (rs.next()) {
                txtInfoAddress.setText(rs.getString("CerAddress"));
                txtInfoDate.setText(String.format("%tY-%<tm-%<td", rs.getDate("CerDOB")));
                txtInfoEmail.setText(rs.getString("CerEmail"));
                txtInfoFullname.setText(rs.getString("CerFullName"));
                txtInfoPhone.setText(rs.getString("CerPhone"));
                lblFullName.setText(rs.getString("CerFullName"));
                if (rs.getString("Gender").equals("Nam")) {
                    rdoInfoMale.setSelected(true);
                } else {
                    rdoInfoFemale.setSelected(true);
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void loadCertificate() {
        Connection conn = null;
        CallableStatement stmt = null;
        ResultSet rs = null;

        try {
            conn = DBConnect.ConnectDatabase();
            stmt = conn.prepareCall("SELECT * FROM [Certificate]");

            rs = stmt.executeQuery();
            //Column
            int len = rs.getMetaData().getColumnCount();
            Vector cols = new Vector(len);
            cols.add("Certificate ID");
            cols.add("Student ID");
            cols.add("Grade");
            cols.add("Generated Day");
//          for (int i = 1; i < len+1; i++) {
//              cols.add(rs.getMetaData().getColumnName(i));
//              System.out.println(rs.getMetaData().getColumnName(i));
//          }
            //Data
            Vector data = new Vector();
            while (rs.next()) {
                Vector row = new Vector(len);
                for (int i = 1; i < len + 1; i++) {
                    row.add(rs.getString(i));
                }
                data.add(row);
            }

            modelCertificateManager = new DefaultTableModel(data, cols) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; //To change body of generated methods, choose Tools | Templates.
                }
            };

            tblCertificateManager.setModel(modelCertificateManager);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void searchCertificate() {
        Connection conn = null;
        CallableStatement stmt = null;
        ResultSet rs = null;
        String filter = "";

        try {
            conn = DBConnect.ConnectDatabase();
            filter = txtSearchFillter.getText();
            if (txtSearchFillter.getText().isEmpty()) {
                stmt = conn.prepareCall("SELECT * FROM [Certificate]");
            } else {
                if (cmbSearchFilterCertificate.getSelectedItem().toString().equals("Certificate ID")) {
                    stmt = conn.prepareCall("SELECT * FROM [Certificate] WHERE [CertiId] = ?");
                    stmt.setString(1, filter);
                } else if (cmbSearchFilterCertificate.getSelectedItem().toString().equals("Student ID")) {
                    stmt = conn.prepareCall("SELECT * FROM [Certificate] WHERE [StuId] = ?");
                    stmt.setString(1, filter);
                } else if (cmbSearchFilterCertificate.getSelectedItem().toString().equals("Grade")) {
                    stmt = conn.prepareCall("SELECT * FROM [Certificate] WHERE [Score] = ?");
                    stmt.setString(1, filter);
                } else if (cmbSearchFilterCertificate.getSelectedItem().toString().equals("Generated Day")) {
                    String DOB = txtSearchFillter.getText();
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                    java.util.Date utilDate = new java.util.Date();
                    try {
                        utilDate = formatter.parse(DOB);
                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                    java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

                    stmt = conn.prepareCall("SELECT * FROM [Certificate] WHERE [DegreeDay] = ?");
                    stmt.setDate(1, sqlDate);
                }
            }

            rs = stmt.executeQuery();
            //Column
            int len = rs.getMetaData().getColumnCount();
            Vector cols = new Vector(len);
            cols.add("Certificate ID");
            cols.add("Student ID");
            cols.add("Grade");
            cols.add("Generated Day");

            //Data
            Vector data = new Vector();
            while (rs.next()) {
                Vector row = new Vector(len);
                for (int i = 1; i < len + 1; i++) {
                    row.add(rs.getString(i));
                }
                data.add(row);
            }

            modelCertificateManager = new DefaultTableModel(data, cols) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; //To change body of generated methods, choose Tools | Templates.
                }
            };
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        tblCertificateManager.setModel(modelCertificateManager);
    }

    public void loadStudent() {
        Connection conn = null;
        CallableStatement stmt = null;
        ResultSet rs = null;

        try {
            conn = DBConnect.ConnectDatabase();
            stmt = conn.prepareCall("SELECT * FROM [Student]");

            rs = stmt.executeQuery();
            //Column

            int len = rs.getMetaData().getColumnCount();
            Vector cols = new Vector(len);
            cols.add("ID");
            cols.add("FullName");
            cols.add("Date of Birth");
            cols.add("Course Name");
            cols.add("Fee Type");

            //Data
            Vector data = new Vector();
            while (rs.next()) {
                Vector row = new Vector(len);
                for (int i = 1; i < len + 1; i++) {
                    row.add(rs.getString(i));
                }
                data.add(row);
            }

            modeltVerifyStudent = new DefaultTableModel(data, cols) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; //To change body of generated methods, choose Tools | Templates.
                }
            };

            tblVerifyStudent.setModel(modeltVerifyStudent);
            tblVerifyStudent.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblVerifyStudent.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblVerifyStudent.getColumnModel().getColumn(2).setPreferredWidth(60);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void logout() {
        this.dispose();
        MainPage m = new MainPage();
        m.setVisible(true);
    }

    public void loadSubjectDetails() {

        tblVerifyStudent.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {

                Connection conn = null;
                CallableStatement stmt = null;
                ResultSet rs = null;
                int fee = 0;
                int balance = 0;
                int totalMark = 0;
                int countMark = 0;

                boolean checkFee = true;
                try {
                    String strFilter = "";
                    int intFilter;
                    int rows = tblVerifyStudent.getSelectedRow();

                    strFilter = tblVerifyStudent.getValueAt(rows, 0).toString();
                    studentID = new Integer(tblVerifyStudent.getValueAt(rows, 0).toString());
                    studentRollnumber = tblVerifyStudent.getValueAt(rows, 1).toString();
                    studentName = tblVerifyStudent.getValueAt(rows, 3).toString();
                    intFilter = new Integer(strFilter);

                    conn = DBConnect.ConnectDatabase();
                    stmt = conn.prepareCall("{call loadVerifyStudentSubject(?) };");
                    stmt.setInt(1, intFilter);
                    rs = stmt.executeQuery();

                    int len = rs.getMetaData().getColumnCount();
                    Vector cols = new Vector(len);
                    cols.add("Subject");
                    cols.add("Mark");

                    //Data
                    Vector data = new Vector();
                    while (rs.next()) {
                        Vector row = new Vector(len);
                        for (int i = 1; i < len + 1; i++) {
                            row.add(rs.getString(i));
                        }
                        totalMark += rs.getInt(2);
                        countMark++;

                        data.add(row);
                    }

                    modelVerifyStudentSubject = new DefaultTableModel(data, cols) {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false; //To change body of generated methods, choose Tools | Templates.
                        }
                    };
                    tblVerifyStudentSubject.setModel(modelVerifyStudentSubject);
                    tblVerifyStudentSubject.getColumnModel().getColumn(0).setPreferredWidth(130);
                    tblVerifyStudentSubject.getColumnModel().getColumn(1).setPreferredWidth(20);
                } catch (Exception ex) {
                    System.out.println("Subject: ");
                    System.out.print(ex.getMessage());
                }

                try {
                    String strFilter = "";
                    int intFilter;
                    int rows = tblVerifyStudent.getSelectedRow();

                    strFilter = tblVerifyStudent.getValueAt(rows, 0).toString();
                    intFilter = new Integer(strFilter);

                    conn = DBConnect.ConnectDatabase();
                    stmt = conn.prepareCall("{call loadVerifyStudentBalance(?) };");
                    stmt.setInt(1, intFilter);
                    rs = stmt.executeQuery();

                    int len = rs.getMetaData().getColumnCount();
                    Vector cols = new Vector(len);
                    cols.add("Day");
                    cols.add("Paid");
                    cols.add("Total Fee");
                    cols.add("Balance");
                    //Data
                    Vector data = new Vector();
                    while (rs.next()) {
                        Vector row = new Vector(len);
//                        for (int i = 1; i < len; i++) {
//                            row.add(rs.getString(i));
//                        }
                        row.add(rs.getDate(1));
                        int paid = rs.getInt(2);
                        row.add(paid);
                        if (checkFee && fee == 0) {
                            fee = rs.getInt(3);
                            checkFee = false;
                        }
                        balance += paid;

                        fee = fee - paid;
                        row.add(fee);
                        row.add(balance);
                        data.add(row);
                    }

                    modelVerifyStudentBalance = new DefaultTableModel(data, cols) {

                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false; //To change body of generated methods, choose Tools | Templates.
                        }
                    };
                    tblVerifyStudentBalance.setModel(modelVerifyStudentBalance);
                } catch (Exception ex) {
                    System.out.println("Balance: ");
                    System.out.print(ex.getMessage());
                }
                statusReport(totalMark, countMark);
            }
        });
    }

    public void statusReport(int totalMark, int countMark) {
        Connection conn = null;
        CallableStatement stmt = null;
        ResultSet rs = null;
        String strFilter = "";
        int intFilter;
        int countRows = 0;
        String statusReport = "";
        boolean enableFee = false;
        statusReport += "Student Rollnumber: " + studentRollnumber + "\n"
                + "Student Name: " + studentName + "\n";

        try {
            conn = DBConnect.ConnectDatabase();
            stmt = conn.prepareCall("{call loadStudentCoursename(?) };");
            stmt.setInt(1, studentID);
            rs = stmt.executeQuery();
            while (rs.next()) {
                studentCourse = rs.getString(1);
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        statusReport += "Student course: " + studentCourse + "\n\n";

        if (tblVerifyStudentBalance.getRowCount() != 0) {
            countRows = tblVerifyStudentBalance.getRowCount() - 1;
        } else {
            countRows = 0;
        }

        try {
            int fee = new Integer(tblVerifyStudentBalance.getValueAt(countRows, 2).toString());

            if (fee <= 0) {
                statusReport += "Fee checks: PASS.\n";
                tempMark = totalMark / countMark;
                if (tempMark >= 75) {
                    statusReport += "Grades: Distinction.\n";
                    statusReport += "Grades checks: checks: PASS.\n";
                    enableFee = true;
                } else if (tempMark >= 60) {
                    statusReport += "Grades: A.\n";
                    statusReport += "Grades checks: checks: PASS.\n";
                    enableFee = true;
                } else if (tempMark >= 50) {
                    statusReport += "Grades: B.\n";
                    statusReport += "Grades checks: checks: PASS.\n";
                } else if (tempMark >= 40) {
                    statusReport += "Grades: C.\n\n";
                    statusReport += "Performance Statements: \n";
                    try {
                        stmt = conn.prepareCall("{call loadStudentSubjectAndMark(?) };");
                        stmt.setInt(1, studentID);
                        rs = stmt.executeQuery();
                        while (rs.next()) {
                            String subject = rs.getString(1);
                            String mark = rs.getString(2);
                            statusReport += "\t" + subject + ": " + mark + ".\n";
                        }
                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                } else {
                    statusReport += "Grades checks: checks: FAIL.\n";
                }
            } else {
                statusReport += "Fee checks: FAIL.\n";
                enableFee = false;
            }

            if (enableFee == true) {
                btnGenerate.setEnabled(true);
            } else {
                btnGenerate.setEnabled(false);
            }
            txtStatusReport.setText(statusReport);
            txtStatusReport.setEditable(false);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void createCertificate() {
        String grade = null;
        boolean checkDuplicate = true;
        Connection conn = null;
        CallableStatement stmt = null;
        ResultSet rs = null;

        try {
            conn = DBConnect.ConnectDatabase();
            stmt = conn.prepareCall("{call countDuplicate(?) };");
            stmt.setInt(1, studentID);
            rs = stmt.executeQuery();

            while (rs.next()) {
                if (rs.getInt("count1") >= 1) {
                    JOptionPane.showMessageDialog(null, "Student can have only one Certificate");
                } else if (rs.getInt("count1") == 0) {
                    try {
                        conn = DBConnect.ConnectDatabase();
                        stmt = conn.prepareCall("{call InsertCertificate(?, ?, ?) };");
                        stmt.setInt(1, studentID);
                        if (tempMark >= 75) {
                            grade = "Distinction";
                        } else if (tempMark >= 60) {
                            grade = "A";
                        } else if (tempMark >= 50) {
                            grade = "B";
                        }
                        stmt.setString(2, grade);
                        java.sql.Date date = new Date(new java.util.Date().getTime());
                        stmt.setDate(3, date);
                        rs = stmt.executeQuery();

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Certificate created Successful");
                    }
                }
            }
        } catch (Exception e) {
            System.out.println("check");
            System.out.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CerPage("vietthang").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnInfoChange;
    private javax.swing.JButton btnInfoEdit;
    private javax.swing.JButton btnInfoLogout;
    private javax.swing.JButton btnPrintReport;
    private javax.swing.JButton btnSearchCertificate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cmbSearchFilterCertificate;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JRadioButton rdoInfoFemale;
    private javax.swing.JRadioButton rdoInfoMale;
    private javax.swing.JTabbedPane tabCertificateManager;
    private javax.swing.JTable tblCertificateManager;
    private javax.swing.JTable tblVerifyStudent;
    private javax.swing.JTable tblVerifyStudentBalance;
    private javax.swing.JTable tblVerifyStudentSubject;
    private javax.swing.JTextField txtInfoAddress;
    private javax.swing.JTextField txtInfoDate;
    private javax.swing.JTextField txtInfoEmail;
    private javax.swing.JTextField txtInfoFullname;
    private javax.swing.JTextField txtInfoPhone;
    private javax.swing.JTextField txtSearchFillter;
    private javax.swing.JTextArea txtStatusReport;
    // End of variables declaration//GEN-END:variables
}
